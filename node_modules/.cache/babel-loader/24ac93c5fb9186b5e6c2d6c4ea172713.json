{"ast":null,"code":"var _jsxFileName = \"/Users/spbiphones/Dropbox/projects/web projects/mood/src/pages/Map.js\";\nimport React from 'react';\nimport '../resources/styles/map.css';\nimport { PanelHeader } from '@vkontakte/vkui';\nimport NavbarBack from '../panels/NavbarBack';\nimport GoogleMapReact from 'google-map-react';\nimport MarkerClusterer from 'google-map-react/markerclusterer';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowToolbar: true\n    };\n  }\n\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js';\n    script.async = true;\n    document.body.appendChild(script);\n    this.setState({\n      isShowToolbar: false\n    });\n  }\n\n  setGoogleMapRef(map, maps) {\n    this.googleMapRef = map;\n    this.googleRef = maps;\n    let locations = [{\n      lat: -31.563910,\n      lng: 147.154312\n    }, {\n      lat: -33.718234,\n      lng: 150.363181\n    }, {\n      lat: -33.727111,\n      lng: 150.371124\n    }];\n    let markers = locations && locations.map(location => {\n      return new this.googleRef.Marker({\n        position: location.position\n      });\n    });\n    let markerCluster = new MarkerClusterer(map, markers, {\n      imagePath: 'https://googlemaps.github.io/js-marker-clusterer/images/m',\n      gridSize: 10,\n      minimumClusterSize: 2\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"news_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.isShowToolbar && React.createElement(PanelHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(NavbarBack, {\n      back: \"news\",\n      onBack: this.changePage,\n      title: \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      className: \"map_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyDJrwFDlj0KxrgP6W91C08IhDNJ1Zr8ANA\"\n      },\n      defaultCenter: this.props.center,\n      onGoogleApiLoaded: ({\n        map,\n        maps\n      }) => this.setGoogleMapRef(map, maps),\n      defaultZoom: this.props.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMap.defaultProps = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};\nexport default Map;","map":{"version":3,"sources":["/Users/spbiphones/Dropbox/projects/web projects/mood/src/pages/Map.js"],"names":["React","PanelHeader","NavbarBack","GoogleMapReact","MarkerClusterer","Map","Component","constructor","props","state","isShowToolbar","componentDidMount","script","document","createElement","src","async","body","appendChild","setState","setGoogleMapRef","map","maps","googleMapRef","googleRef","locations","lat","lng","markers","location","Marker","position","markerCluster","imagePath","gridSize","minimumClusterSize","render","changePage","height","width","key","center","zoom","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../resources/styles/map.css'\nimport { PanelHeader } from '@vkontakte/vkui';\nimport NavbarBack from '../panels/NavbarBack';\nimport GoogleMapReact from 'google-map-react';\nimport MarkerClusterer from 'google-map-react/markerclusterer'\nclass Map extends React.Component {\n    static defaultProps = {\n        center: {\n          lat: 59.95,\n          lng: 30.33\n        },\n        zoom: 11\n      };\n    constructor(props){\n        super(props)\n        this.state = {\n            isShowToolbar : true\n        }\n    }\n    componentDidMount(){\n        const script = document.createElement('script')\n        script.src = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js'\n        script.async = true\n        document.body.appendChild(script)\n        this.setState({isShowToolbar : false})\n    }\n    setGoogleMapRef (map, maps) {\n        this.googleMapRef = map\n        this.googleRef = maps\n       let locations = [\n            {lat: -31.563910, lng: 147.154312},\n            {lat: -33.718234, lng: 150.363181},\n            {lat: -33.727111, lng: 150.371124}]\n        let markers = locations && locations.map((location) => {\n          return new this.googleRef.Marker({position: location.position})\n        })\n        let markerCluster = new MarkerClusterer(map, markers, {\n          imagePath: 'https://googlemaps.github.io/js-marker-clusterer/images/m',\n          gridSize: 10,\n          minimumClusterSize: 2\n        })\n      }\n    render() {\n        return (\n            <div className=\"news_content\">\n                {this.state.isShowToolbar && <PanelHeader>\n                    <NavbarBack back=\"news\" onBack={this.changePage} title=\"Новости\"/>\n                </PanelHeader>}\n                <div style={{ height: '100vh', width: '100%' }} className=\"map_container\">\n                    <GoogleMapReact bootstrapURLKeys={{ key: \"AIzaSyDJrwFDlj0KxrgP6W91C08IhDNJ1Zr8ANA\" }} defaultCenter={this.props.center}\n                          onGoogleApiLoaded={({map, maps}) => this.setGoogleMapRef(map, maps)}  defaultZoom={this.props.zoom}>\n                            \n\n                    </GoogleMapReact>\n                \n                </div>\n               \n            </div>\n        );\n    }\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}