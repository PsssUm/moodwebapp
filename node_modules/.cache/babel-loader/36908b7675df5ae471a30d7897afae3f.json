{"ast":null,"code":"var _jsxFileName = \"/Users/spbiphones/Dropbox/projects/web projects/mood/src/pages/custom_views/MoodPicker.js\";\nimport React from 'react';\nimport { PanelHeader, ModalRoot, ModalPage, View, Panel } from '@vkontakte/vkui';\nconst MODAL_PAGE_FILTERS = 'filters';\nconst MODAL_CARD_MONEY_SEND = 'money-send';\n\nclass MoodPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeModal: null,\n      modalHistory: []\n    };\n    this.users = 'k'.repeat(25).split('').map(() => {\n      return getRandomUser();\n    });\n\n    this.modalBack = () => {\n      this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\n    };\n  }\n\n  setActiveModal(activeModal) {\n    activeModal = activeModal || null;\n    let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\n\n    if (activeModal === null) {\n      modalHistory = [];\n    } else if (modalHistory.indexOf(activeModal) !== -1) {\n      modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\n    } else {\n      modalHistory.push(activeModal);\n    }\n\n    this.setState({\n      activeModal,\n      modalHistory\n    });\n  }\n\n  render() {\n    const modal = React.createElement(ModalRoot, {\n      activeModal: this.state.activeModal,\n      onClose: this.modalBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ModalPage, {\n      id: MODAL_PAGE_FILTERS,\n      onClose: this.modalBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n    return React.createElement(View, {\n      activePanel: \"modals\",\n      modal: modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      id: \"modals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MoodPicker;","map":{"version":3,"sources":["/Users/spbiphones/Dropbox/projects/web projects/mood/src/pages/custom_views/MoodPicker.js"],"names":["React","PanelHeader","ModalRoot","ModalPage","View","Panel","MODAL_PAGE_FILTERS","MODAL_CARD_MONEY_SEND","MoodPicker","Component","constructor","props","state","activeModal","modalHistory","users","repeat","split","map","getRandomUser","modalBack","setActiveModal","length","indexOf","splice","push","setState","render","modal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,IAA5C,EAAkDC,KAAlD,QAA+D,iBAA/D;AAEA,MAAMC,kBAAkB,GAAG,SAA3B;AAEA,MAAMC,qBAAqB,GAAG,YAA9B;;AAGA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IADF;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAKA,SAAKC,KAAL,GAAa,IAAIC,MAAJ,CAAW,EAAX,EAAeC,KAAf,CAAqB,EAArB,EAAyBC,GAAzB,CAA6B,MAAM;AAC9C,aAAOC,aAAa,EAApB;AACD,KAFY,CAAb;;AAIA,SAAKC,SAAL,GAAiB,MAAM;AACrB,WAAKC,cAAL,CAAoB,KAAKT,KAAL,CAAWE,YAAX,CAAwB,KAAKF,KAAL,CAAWE,YAAX,CAAwBQ,MAAxB,GAAiC,CAAzD,CAApB;AACD,KAFD;AAGD;;AAEDD,EAAAA,cAAc,CAACR,WAAD,EAAc;AAC1BA,IAAAA,WAAW,GAAGA,WAAW,IAAI,IAA7B;AACA,QAAIC,YAAY,GAAG,KAAKF,KAAL,CAAWE,YAAX,GAA0B,CAAC,GAAG,KAAKF,KAAL,CAAWE,YAAf,CAA1B,GAAyD,EAA5E;;AAEA,QAAID,WAAW,KAAK,IAApB,EAA0B;AACxBC,MAAAA,YAAY,GAAG,EAAf;AACD,KAFD,MAEO,IAAIA,YAAY,CAACS,OAAb,CAAqBV,WAArB,MAAsC,CAAC,CAA3C,EAA8C;AACnDC,MAAAA,YAAY,GAAGA,YAAY,CAACU,MAAb,CAAoB,CAApB,EAAuBV,YAAY,CAACS,OAAb,CAAqBV,WAArB,IAAoC,CAA3D,CAAf;AACD,KAFM,MAEA;AACLC,MAAAA,YAAY,CAACW,IAAb,CAAkBZ,WAAlB;AACD;;AAED,SAAKa,QAAL,CAAc;AACZb,MAAAA,WADY;AAEZC,MAAAA;AAFY,KAAd;AAID;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GACT,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWC,WAAnC;AAAgD,MAAA,OAAO,EAAE,KAAKO,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAEd,kBAAf;AAAmC,MAAA,OAAO,EAAE,KAAKc,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQA,WACE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAC,QAAlB;AAA2B,MAAA,KAAK,EAAEQ,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AApDsC;;AAuDzC,eAAepB,UAAf","sourcesContent":["import React from 'react';\nimport { PanelHeader, ModalRoot, ModalPage, View, Panel } from '@vkontakte/vkui';\n\nconst MODAL_PAGE_FILTERS = 'filters';\n\nconst MODAL_CARD_MONEY_SEND = 'money-send';\n\n\nclass MoodPicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeModal: null,\n      modalHistory: []\n    };\n\n    this.users = 'k'.repeat(25).split('').map(() => {\n      return getRandomUser();\n    });\n\n    this.modalBack = () => {\n      this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\n    };\n  }\n\n  setActiveModal(activeModal) {\n    activeModal = activeModal || null;\n    let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\n\n    if (activeModal === null) {\n      modalHistory = [];\n    } else if (modalHistory.indexOf(activeModal) !== -1) {\n      modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\n    } else {\n      modalHistory.push(activeModal);\n    }\n\n    this.setState({\n      activeModal,\n      modalHistory\n    });\n  };\n\n  render() {\n    const modal = (\n      <ModalRoot activeModal={this.state.activeModal} onClose={this.modalBack}>\n        <ModalPage id={MODAL_PAGE_FILTERS} onClose={this.modalBack}>\n          \n        </ModalPage>\n      </ModalRoot>\n    );\n\n    return (\n      <View activePanel=\"modals\" modal={modal}>\n        <Panel id=\"modals\">\n          \n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default MoodPicker;"]},"metadata":{},"sourceType":"module"}